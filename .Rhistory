c[["lcom"]]<-c[["lcom"]]*coff[["lcom"]]
c[["npm"]]<-c[["npm"]]*coff[["npm"]]
c[["loc"]]<-c[["loc"]]*coff[["loc"]]
newMatrix<-rbind(newMatrix,c)
}
return(newMatrix)
}
debugSource('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
debugSource('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
debugSource('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
multiplyCoefficient<-function(data,coff){
newMatrix<-data[1,]
for (n in 1:nrow(data)){
c<-data[n,]
c[["wmc"]]<-c[["wmc"]]*coff[["wmc"]]
c[["dit"]]<-c[["dit"]]*coff[["dit"]]
c[["noc"]]<-c[["noc"]]*coff[["noc"]]
c[["cbo"]]<-c[["cbo"]]*coff[["cbo"]]
c[["rfc"]]<-c[["rfc"]]*coff[["rfc"]]
c[["lcom"]]<-c[["lcom"]]*coff[["lcom"]]
c[["npm"]]<-c[["npm"]]*coff[["npm"]]
c[["loc"]]<-c[["loc"]]*coff[["loc"]]
newMatrix<-rbind(newMatrix,c)
}
newmatrix[-c(1),]
return(newMatrix)
}
multiplyCoefficient(data,model$coefficients)
multiplyCoefficient<-function(data,coff){
newMatrix<-data[1,]
for (n in 1:nrow(data)){
c<-data[n,]
c[["wmc"]]<-c[["wmc"]]*coff[["wmc"]]
c[["dit"]]<-c[["dit"]]*coff[["dit"]]
c[["noc"]]<-c[["noc"]]*coff[["noc"]]
c[["cbo"]]<-c[["cbo"]]*coff[["cbo"]]
c[["rfc"]]<-c[["rfc"]]*coff[["rfc"]]
c[["lcom"]]<-c[["lcom"]]*coff[["lcom"]]
c[["npm"]]<-c[["npm"]]*coff[["npm"]]
c[["loc"]]<-c[["loc"]]*coff[["loc"]]
newMatrix<-rbind(newMatrix,c)
}
newMatrix[-c(1),]
return(newMatrix)
}
multiplyCoefficient(data,model$coefficients)
multiplyCoefficient<-function(data,coff){
newMatrix<-data[1,]
for (n in 1:nrow(data)){
c<-data[n,]
c[["wmc"]]<-c[["wmc"]]*coff[["wmc"]]
c[["dit"]]<-c[["dit"]]*coff[["dit"]]
c[["noc"]]<-c[["noc"]]*coff[["noc"]]
c[["cbo"]]<-c[["cbo"]]*coff[["cbo"]]
c[["rfc"]]<-c[["rfc"]]*coff[["rfc"]]
c[["lcom"]]<-c[["lcom"]]*coff[["lcom"]]
c[["npm"]]<-c[["npm"]]*coff[["npm"]]
c[["loc"]]<-c[["loc"]]*coff[["loc"]]
newMatrix<-rbind(newMatrix,c)
}
newMatrix[-c(1),]
return(newMatrix)
}
newData<-multiplyCoefficient(data,model$coefficients)
newData
newData[-1,]
data
ls()
rm(ls=ls())
rm(ls())
rm(list=ls())
CodeMetricsStdVal<- c(cbo=9,wmc=30 , rfc=12, loc=12, lcom=12,npm=12,dit=5,noc=6 )
# multiply coefficients value...
multiplyCoefficient<-function(data,coff){
newMatrix<-data[1,]
for (n in 1:nrow(data)){
c<-data[n,]
c[["wmc"]]<-c[["wmc"]]*coff[["wmc"]]
c[["dit"]]<-c[["dit"]]*coff[["dit"]]
c[["noc"]]<-c[["noc"]]*coff[["noc"]]
c[["cbo"]]<-c[["cbo"]]*coff[["cbo"]]
c[["rfc"]]<-c[["rfc"]]*coff[["rfc"]]
c[["lcom"]]<-c[["lcom"]]*coff[["lcom"]]
c[["npm"]]<-c[["npm"]]*coff[["npm"]]
c[["loc"]]<-c[["loc"]]*coff[["loc"]]
newMatrix<-rbind(newMatrix,c)
}
newMatrix[-1,]
return(newMatrix)
}
#compare data with standard value...
compareDataWithStandardValue<-function(data,stdValue){
newMatrix<-data[1,]
for (n in 1:nrow(data)){
c<-data[n,]
c[["wmc"]]<- 100- (c[["wmc"]]/stdValue[["wmc"]])*100
c[["dit"]]<- 100- (c[["dit"]]/stdValue[["dit"]])*100
c[["noc"]]<- 100- (c[["noc"]]/stdValue[["noc"]])*100
c[["cbo"]]<- 100- (c[["cbo"]]/stdValue[["cbo"]])*100
c[["rfc"]]<- 100- (c[["rfc"]]/stdValue[["rfc"]])*100
c[["lcom"]]<- 100-(c[["lcom"]]/stdValue[["lcom"]])*100
c[["npm"]]<- 100- (c[["npm"]]/stdValue[["npm"]])*100
c[["loc"]]<- 100- (c[["loc"]]/stdValue[["loc"]])*100
newMatrix<-rbind(newMatrix,c)
}
newMatrix[-1,]
return(newMatrix)
}
# partioning data based positive impact and negative impact...
partitionDataBasedOnSign<-function(data){
newMatrix<-c()
for(n in 1:nrow(data)){
rowItem<-data[n,]
nPos<-0
nNeg<-0
for(i in 3:(ncol(rowItem)-1)){
if(is.finite(rowItem[[i]])){
if(rowItem[[i]]>0){
nPos<-nPos+rowItem[[i]]
}else{
nNeg<-nNeg-rowItem[[i]]
}
}
}
newMatrix<-rbind(newMatrix,c(rowItem[["name"]],rowItem[["Id"]],nPos,nNeg,rowItem[["bug"]]))
}
return(newMatrix)
}
# loading all csv files and make a combined data frame...
loadAllCsvFile<-function(path){
allFiles<-list.files(path)
combindedData<-c()
for(i in 1: length){
data<-read.csv(path+allFiles[[i]])
multipliedData<-compareDataWithStandardValue(data)
partitionedData<-partitionDataBasedOnSign(multipliedData)
combindedData<-rbind(combindedData,partitionedData)
}
return(combindedData)
}
newData<-multiplyCoefficient(data,model$coefficients)
path <-"C:\Users\x-man\Documents\jeditCsvFile\"
CodeMetricsStdVal<- c(cbo=9,wmc=30 , rfc=12, loc=12, lcom=12,npm=12,dit=5,noc=6 )
# multiply coefficients value...
multiplyCoefficient<-function(data,coff){
newMatrix<-data[1,]
for (n in 1:nrow(data)){
c<-data[n,]
c[["wmc"]]<-c[["wmc"]]*coff[["wmc"]]
c[["dit"]]<-c[["dit"]]*coff[["dit"]]
c[["noc"]]<-c[["noc"]]*coff[["noc"]]
c[["cbo"]]<-c[["cbo"]]*coff[["cbo"]]
c[["rfc"]]<-c[["rfc"]]*coff[["rfc"]]
c[["lcom"]]<-c[["lcom"]]*coff[["lcom"]]
c[["npm"]]<-c[["npm"]]*coff[["npm"]]
c[["loc"]]<-c[["loc"]]*coff[["loc"]]
newMatrix<-rbind(newMatrix,c)
}
newMatrix[-1,]
return(newMatrix)
}
#compare data with standard value...
compareDataWithStandardValue<-function(data,stdValue){
newMatrix<-data[1,]
for (n in 1:nrow(data)){
c<-data[n,]
c[["wmc"]]<- 100- (c[["wmc"]]/stdValue[["wmc"]])*100
c[["dit"]]<- 100- (c[["dit"]]/stdValue[["dit"]])*100
c[["noc"]]<- 100- (c[["noc"]]/stdValue[["noc"]])*100
c[["cbo"]]<- 100- (c[["cbo"]]/stdValue[["cbo"]])*100
c[["rfc"]]<- 100- (c[["rfc"]]/stdValue[["rfc"]])*100
c[["lcom"]]<- 100-(c[["lcom"]]/stdValue[["lcom"]])*100
c[["npm"]]<- 100- (c[["npm"]]/stdValue[["npm"]])*100
c[["loc"]]<- 100- (c[["loc"]]/stdValue[["loc"]])*100
newMatrix<-rbind(newMatrix,c)
}
newMatrix[-1,]
return(newMatrix)
}
# partioning data based positive impact and negative impact...
partitionDataBasedOnSign<-function(data){
newMatrix<-c()
for(n in 1:nrow(data)){
rowItem<-data[n,]
nPos<-0
nNeg<-0
for(i in 3:(ncol(rowItem)-1)){
if(is.finite(rowItem[[i]])){
if(rowItem[[i]]>0){
nPos<-nPos+rowItem[[i]]
}else{
nNeg<-nNeg-rowItem[[i]]
}
}
}
newMatrix<-rbind(newMatrix,c(rowItem[["name"]],rowItem[["Id"]],nPos,nNeg,rowItem[["bug"]]))
}
return(newMatrix)
}
# loading all csv files and make a combined data frame...
loadAllCsvFile<-function(path){
allFiles<-list.files(path)
combindedData<-c()
for(i in 1: length){
data<-read.csv(path+allFiles[[i]])
multipliedData<-compareDataWithStandardValue(data)
partitionedData<-partitionDataBasedOnSign(multipliedData)
combindedData<-rbind(combindedData,partitionedData)
}
return(combindedData)
}
newData<-multiplyCoefficient(data,model$coefficients)
debugSource('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
loadAllCsvFile(path)
path
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
rm(list=ls())
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
sourcePath[["path"]]
loadAllCsvFile(sourcePath[["path"]])
loadAllCsvFile(sourcePath[["path"]])
rm(list=ls())
debugSource('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
loadAllCsvFile(sourcePath[["path"]])
debugSource('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
loadAllCsvFile(sourcePath[["path"]])
debugSource('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
loadAllCsvFile(sourcePath[["path"]])
rm(list=ls())
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
loadAllCsvFile(sourcePath[["path"]])
newData<-loadAllCsvFile(sourcePath[["path"]])
newData
source('C:/Users/x-man/Copy/R/FileManager.R')
source('C:/Users/x-man/Copy/R/FileManager.R')
source('C:/Users/x-man/Copy/R/FileManager.R')
writeDataFrameTo(newData,"C:/Users/x-man/Copy/R","combindedData")
source('C:/Users/x-man/Copy/R/FileManager.R')
writeDataFrameTo(newData,"C:/Users/x-man/Copy/R","combindedData")
source('C:/Users/x-man/Copy/R/FileManager.R')
writeDataFrameTo(newData,"C:/Users/x-man/Copy/R","combindedData")
writeDataFrameTo(newData,"C:/Users/x-man/Copy/R","combindedData")
View(newData)
names(newData)<-c("Id","Id","positive","negative","bug")
newData
view(newData)
source('C:/Users/x-man/Copy/R/FileManager.R')
writeDataFrameTo(newData,"C:/Users/x-man/Copy/R","combindedData")
rm(list=ls())
source('~/.active-rstudio-document')
source('C:/Users/x-man/Copy/R/DbScanCluster.R')
loadSingleCsvFile('C:/Users/x-man/Copy/R/Data/Jedit-3.2.csv')
data<-loadSingleCsvFile('C:/Users/x-man/Copy/R/Data/Jedit-3.2.csv')
cltr<-getClustersUsingDbScan(data,300)
cltr
grouplingCsvFileUsingClusterInfo(data,cltr$cluster)
source('~/.active-rstudio-document')
grouplingCsvFileUsingClusterInfo(data,cltr$cluster)
grouplingCsvFileUsingClusterInfo(data,cltr$cluster)
grouplingCsvFileUsingClusterInfo(data,cltr)
cltr$clusters
cltr$cluster
rm(list=ls())
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
loadSingleCsvFile(sourcePath[["path"]])
loadSingleCsvFile(sourcePath[["path"]])
rm(list=ls())
source('~/.active-rstudio-document')
loadSingleCsvFile(sourcePath[["path"]])
data<-loadSingleCsvFile(sourcePath[["path"]])
id<-data[,2]
id
pos<-data[,3]
neg<-data[,4]
dbScandData<-cbind(pos,neg,id)
dbScandData
source('C:/Users/x-man/Copy/R/DbScanCluster.R')
dbCluster<-getClustersUsingDbScan(dbScandData,300,"")
dbCluster
dbScandData[dbCluster$cluster==2,]
grouplingCsvFileUsingClusterInfo(data,dbCluster)
dbScandData[dbCluster$cluster==0,]
grouplingCsvFileUsingClusterInfo(data,dbCluster)
dbCluster
dbCluster$cluster
rm(list=ls())
source('~/.active-rstudio-document')
db<-source('C:/Users/x-man/Copy/R/DbScanCluster.R')
data<-loadSingleCsvFile(sourcePath[['path']])
data
id<-data[,2]
pos<-data[,3]
neg<-data[,4]
clsData<-cbind(pos,neg,id)
clsData
cluster<-getClustersUsingDbScan(clsData,300)
cluster
grouplingCsvFileUsingClusterInfo(data,clsData)
rm(db)
db<-source('C:/Users/x-man/Copy/R/DbScanCluster.R')
db.grouplingCsvFileUsingClusterInfo(data,clsData)
db$grouplingCsvFileUsingClusterInfo(data,clsData)
grouplingCsvFileUsingClusterInfo(data,clsData)
grouplingCsvFileUsingClusterInfo(data,cluster)
rm(db)
db<-source('C:/Users/x-man/Copy/R/DbScanCluster.R')
grouplingCsvFileUsingClusterInfo(data,cluster)
rm(db)
db<-source('C:/Users/x-man/Copy/R/DbScanCluster.R')
grouplingCsvFileUsingClusterInfo(data,cluster)
source('C:/Users/x-man/Copy/R/DbScanCluster.R')
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
data<-loadSingleCsvFile(sourcePath[['path']])
rm(list=ls())
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
data<-loadSingleCsvFile(sourcePath[['path']])
rm(list=ls())
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
data<-loadSingleCsvFile(sourcePath[['path']])
dbData<-getDbScanData(data)
dbData
source('C:/Users/x-man/Copy/R/DbScanCluster.R')
cluster<-getClustersUsingDbScan(dbData,300)
grouplingCsvFileUsingClusterInfo(data,cluster)
data
rm(list=ls())
cl
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
rm(list=ls())
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
data<-loadSingleCsvFile(sourcePath[['path']])
dbData<-getDbScanData(data)
dbData
source('C:/Users/x-man/Copy/R/FileManager.R')
data
source('C:/Users/x-man/Copy/R/DbScanCluster.R')
cluster<-getClustersUsingDbScan(dbData,300)
grouplingCsvFileUsingClusterInfo(data,cluster)
grouplingCsvFileUsingClusterInfo(data,cluster)
View(DataIds)
View(DataIds)
nrow(DataIds)
length(DataIds)
r
r<-data[2,]
r
r[['1']]
r[[1]]
r[[2]]
rm(list=ls())
source('C:/Users/x-man/Copy/R/DbScanCluster.R')
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
data<-loadSingleCsvFile(sourcePath[['path']])
dbData<-getDbScanData(data)
cluster<-getClustersUsingDbScan(dbData,300)
cluster
grouplingCsvFileUsingClusterInfo(data,cluster)
grouplingCsvFileUsingClusterInfo(data,cluster)
rm(list=ls())
debugSource('C:/Users/x-man/Copy/R/DbScanCluster.R')
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
data<-loadSingleCsvFile(sourcePath[['path']])
dbData<-getDbScanData(data)
cluster<-getClustersUsingDbScan(dbData,300)
grouplingCsvFileUsingClusterInfo(data,cluster)
rowItem
mainData
mainData[[13,]]
mainData[13,]
rm(list=ls())
debugSource('C:/Users/x-man/Copy/R/DbScanCluster.R')
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
data<-loadSingleCsvFile(sourcePath[['path']])
dbData<-getDbScanData(data)
cluster<-getClustersUsingDbScan(dbData,300)
grouplingCsvFileUsingClusterInfo(data,cluster)
grouplingCsvFileUsingClusterInfo(data,cluster)
mainData[cluster$cluster==2,]
mainData[cluster$cluster==1,]
mainData[cluster$cluster==0,]
rm(list=ls())
debugSource('C:/Users/x-man/Copy/R/DbScanCluster.R')
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
data<-loadSingleCsvFile(sourcePath[['path']])
dbData<-getDbScanData(data)
cluster<-getClustersUsingDbScan(dbData,300)
grouplingCsvFileUsingClusterInfo(data,cluster)
load("C:/Users/x-man/Copy/R/.RData")
getwd()
setwd("C:/Users/x-man/Copy/R/")
getwd()
rm(list=ls())
debugSource('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
data<-loadSingleCsvFile(sourcePath[['path']])
View(c)
View(data)
View(c)
rm(list=ls())
debugSource('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
data<-loadSingleCsvFile(sourcePath[['path']])
View(c)
View(data)
rm(list=ls())
source('C:/Users/x-man/Copy/R/multiplyCoefficient.R')
source('C:/Users/x-man/Copy/R/DbScanCluster.R')
data<-loadSingleCsvFile(sourcePath[['path']])
dbData<-getDbScanData(data)
cluster<-getClustersUsingDbScan(dbData,300)
jeditData<-read.csv('C:/Users/x-man/Copy/R/Data/Jedit-3.2.csv')
grouplingCsvFileUsingClusterInfo(jeditData,cluster)
predictedData<-rbind(dbData[99,],dbData[234,],dbData[50,],dbData[8,],dbData[67,])
#testData<-rbind(data[99,],data[234,],data[50,],data[8,],data[67,])
predictedCls<-getPredictedCluster(dbData,300,predictedData)
testData<-read.csv('C:/Users/x-man/Copy/R/Data/testData.csv')
residual<-predictDefect()
residual
source('C:/Users/x-man/Copy/R/predictionModel.R')
predictDefect()
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
predictDefect()
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
de<-predictDefect()
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
r
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
r
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
warning()
warnings()
warnings
View(r)
rm(list=ls())
debugSource('C:/Users/x-man/Copy/R/predictionModel.R')
predictDefect()
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
predictDefect()
predictDefect()
r<-predictDefect()
r
r[1,]
r[['fit']]
r[1]
r[2]
rm(list=ls())
source('C:/Users/x-man/Copy/R/FileManager.R')
r<-predictDefect()
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
r
r[1]
r[0]
r[1]
r[1]
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
r<-predictDefect()
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
r
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
r.res
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
r.res
r$res
r$test
rowRes<-r$res[1,]
rowRes
rowTest<-r$test[1,]
rowTest
d<-cbind(rowTest,rowRes)
rowRes<-r$res[]
rowRes
rowRes<-r$res[1,]
rowRes
re<-rowRes[1]
re
d<-cbind(rowTest,re)
d
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
r
rm(list=ls())
source('C:/Users/x-man/Copy/R/predictionModel.R')
r<-predictDefect()
r
rm(list=ls())
source('C:/Users/x-man/Copy/R/FileManager.R')
